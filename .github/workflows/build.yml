name: Build

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  sonarcloud:
    name: Codecov
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true
      - name: Test
        run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: b42a4b31-e23d-48b7-9df1-db1bf502302a

          

      # Speed-up analysis by caching the scanner workspace
      # - name: Cache SonarCloud workspace
      #   uses: actions/cache@v1
      #   with:
      #     path: ~\.sonar\cache
      #     key: ${{ runner.os }}-sonar-cache
      #     restore-keys: ${{ runner.os }}-sonar-cache

      # # Speed-up analysis by caching the scanner installation
      # - name: Cache SonarCloud scanner
      #   id: cache-sonar-scanner
      #   uses: actions/cache@v1
      #   with:
      #     path: .\.sonar\scanner
      #     key: ${{ runner.os }}-sonar-scanner
      #     restore-keys: ${{ runner.os }}-sonar-scanner

      # - name: Install SonarCloud scanner
      #   if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #   shell: powershell
      #   # The --version argument is optional. If it is omitted the latest version will be installed.
      #   run: |
      #     New-Item -Path .\.sonar\scanner -ItemType Directory
      #     dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      # - name: Build
      #   shell: powershell
      #   env:
      #     # Needed to get some information about the pull request, if any
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # The secret referenced in the command-line by SONAR_TOKEN should be generated
      #     # from https://sonarcloud.io/account/security/
      #     # The organization and project arguments (see /o and /k) are displayed
      #     # on the project dashboard in SonarCloud.
      #   run: |
      #     .\.sonar\scanner\dotnet-sonarscanner begin /k:"jdubar_HangTab" /o:"jdubar" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      #     dotnet build HangTab.sln
      #     .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
